Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(exit.o)
                              /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/crtatmega128.o (exit)
/usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_divmodhi4.o)
                              aes.o (__divmodhi4)
/usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(exit.o) (_exit)
/usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_copy_data.o)
                              aes.o (__do_copy_data)
/usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_prologue.o)
                              aes.o (__prologue_saves__)
/usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_epilogue.o)
                              aes.o (__epilogue_restores__)
/usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(malloc.o)
                              aes.o (malloc)
/usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(memcmp.o)
                              aes.o (memcmp)
/usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(memcpy.o)
                              aes.o (memcpy)
/usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(memset.o)
                              aes.o (memset)
/usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(printf.o)
                              print.o (printf)
/usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(vfprintf_std.o)
                              /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(printf.o) (vfprintf)
/usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(strnlen_P.o)
                              /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(vfprintf_std.o) (strnlen_P)
/usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(strnlen.o)
                              /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(vfprintf_std.o) (strnlen)
/usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(fputc.o)
                              /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(vfprintf_std.o) (fputc)
/usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(iob.o)
                              /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(printf.o) (__iob)
/usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(ultoa_invert.o)
                              /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(vfprintf_std.o) (__ultoa_invert)
/usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_clear_bss.o)
                              /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(malloc.o) (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000003 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/crtatmega128.o
LOAD /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libm.a
LOAD aes.o
LOAD main.o
LOAD print.o
LOAD /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libatmega128.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ff00                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xff00
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000003]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x2e30
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/crtatmega128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x000000000000008c                . = ALIGN (0x2)
                0x000000000000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000008c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000008c                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
                0x000000000000008c                . = ALIGN (0x2)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000008c                __ctors_start = .
 *(.ctors)
                0x000000000000008c                __ctors_end = .
                0x000000000000008c                __dtors_start = .
 *(.dtors)
                0x000000000000008c                __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 .init0         0x000000000000008c        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/crtatmega128.o
                0x000000000000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000008c        0xc /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/crtatmega128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000098       0x1a /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_copy_data.o)
                0x0000000000000098                __do_copy_data
 .init4         0x00000000000000b2       0x10 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_clear_bss.o)
                0x00000000000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000c2        0x8 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/crtatmega128.o
 *(.init9)
 *(.text)
 .text          0x00000000000000ca        0x4 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/crtatmega128.o
                0x00000000000000ca                __vector_22
                0x00000000000000ca                __vector_28
                0x00000000000000ca                __vector_1
                0x00000000000000ca                __vector_32
                0x00000000000000ca                __vector_34
                0x00000000000000ca                __vector_24
                0x00000000000000ca                __vector_12
                0x00000000000000ca                __bad_interrupt
                0x00000000000000ca                __vector_6
                0x00000000000000ca                __vector_31
                0x00000000000000ca                __vector_3
                0x00000000000000ca                __vector_23
                0x00000000000000ca                __vector_30
                0x00000000000000ca                __vector_25
                0x00000000000000ca                __vector_11
                0x00000000000000ca                __vector_13
                0x00000000000000ca                __vector_17
                0x00000000000000ca                __vector_19
                0x00000000000000ca                __vector_7
                0x00000000000000ca                __vector_27
                0x00000000000000ca                __vector_5
                0x00000000000000ca                __vector_33
                0x00000000000000ca                __vector_4
                0x00000000000000ca                __vector_9
                0x00000000000000ca                __vector_2
                0x00000000000000ca                __vector_21
                0x00000000000000ca                __vector_15
                0x00000000000000ca                __vector_29
                0x00000000000000ca                __vector_8
                0x00000000000000ca                __vector_26
                0x00000000000000ca                __vector_14
                0x00000000000000ca                __vector_10
                0x00000000000000ca                __vector_16
                0x00000000000000ca                __vector_18
                0x00000000000000ca                __vector_20
 .text          0x00000000000000ce        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(exit.o)
 .text          0x00000000000000ce     0x2256 aes.o
                0x00000000000000ce                xor_buf
                0x00000000000000f8                aes_encrypt_cbc
                0x0000000000000114                increment_iv
                0x0000000000000154                ccm_prepare_first_ctr_blk
                0x000000000000016e                ccm_prepare_first_format_blk
                0x00000000000001e6                ccm_format_assoc_data
                0x0000000000000280                ccm_format_payload_data
                0x0000000000000300                SubWord
                0x000000000000033e                aes_key_setup
                0x000000000000045e                AddRoundKey
                0x00000000000004be                SubBytes
                0x00000000000006c2                InvSubBytes
                0x00000000000008c6                ShiftRows
                0x0000000000000902                InvShiftRows
                0x000000000000093e                MixColumns
                0x0000000000000bc2                InvMixColumns
                0x0000000000000ede                aes_encrypt
                0x000000000000140a                aes_encrypt_cbc_mac
                0x00000000000014f6                aes_encrypt_ctr
                0x0000000000001622                aes_decrypt_ctr
                0x0000000000001638                aes_decrypt_ccm
                0x00000000000019ca                aes_encrypt_ccm
                0x0000000000001cfc                aes_decrypt
                0x00000000000021c2                aes_decrypt_cbc
                0x00000000000022aa                print_state
                0x00000000000022f4                print_rnd_key
 .text          0x0000000000002324      0x1b8 main.o
                0x0000000000002324                aes_cbc_test
 .text          0x00000000000024dc       0x82 print.o
                0x00000000000024dc                print_hex
                0x0000000000002520                print_hexbyte
                0x000000000000254a                print
 .text          0x000000000000255e        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text          0x000000000000255e        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_exit.o)
 .text          0x000000000000255e        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_copy_data.o)
 .text          0x000000000000255e        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_prologue.o)
 .text          0x000000000000255e        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_epilogue.o)
 .text          0x000000000000255e        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text          0x000000000000255e        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(malloc.o)
 .text          0x000000000000255e        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(memcmp.o)
 .text          0x000000000000255e        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(memcpy.o)
 .text          0x000000000000255e        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(memset.o)
 .text          0x000000000000255e        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(printf.o)
 .text          0x000000000000255e        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(vfprintf_std.o)
 .text          0x000000000000255e        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(strnlen_P.o)
 .text          0x000000000000255e        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(strnlen.o)
 .text          0x000000000000255e        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(fputc.o)
 .text          0x000000000000255e        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(iob.o)
 .text          0x000000000000255e        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(ultoa_invert.o)
 .text          0x000000000000255e        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_clear_bss.o)
                0x000000000000255e                . = ALIGN (0x2)
 *(.text.*)
 .text.avr-libc
                0x000000000000255e        0x6 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(exit.o)
                0x000000000000255e                exit
 .text.startup  0x0000000000002564       0x1c main.o
                0x0000000000002564                main
 .text.libgcc.mul
                0x0000000000002580        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x0000000000002580       0x28 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_divmodhi4.o)
                0x0000000000002580                __divmodhi4
                0x0000000000002580                _div
 .text.libgcc   0x00000000000025a8        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x00000000000025a8        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x00000000000025a8        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x00000000000025a8        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x00000000000025a8        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x00000000000025a8        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000025a8        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000025a8        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000025a8        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000025a8        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000025a8        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000025a8        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000025a8        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000025a8        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000025a8        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000025a8        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000025a8        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000025a8        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000025a8        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000025a8        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_prologue.o)
 .text.libgcc.div
                0x00000000000025a8        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_prologue.o)
 .text.libgcc   0x00000000000025a8        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_prologue.o)
 .text.libgcc.prologue
                0x00000000000025a8       0x38 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_prologue.o)
                0x00000000000025a8                __prologue_saves__
 .text.libgcc.builtins
                0x00000000000025e0        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_prologue.o)
 .text.libgcc.fmul
                0x00000000000025e0        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_prologue.o)
 .text.libgcc.fixed
                0x00000000000025e0        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_prologue.o)
 .text.libgcc.mul
                0x00000000000025e0        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_epilogue.o)
 .text.libgcc.div
                0x00000000000025e0        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_epilogue.o)
 .text.libgcc   0x00000000000025e0        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_epilogue.o)
 .text.libgcc.prologue
                0x00000000000025e0       0x36 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_epilogue.o)
                0x00000000000025e0                __epilogue_restores__
 .text.libgcc.builtins
                0x0000000000002616        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_epilogue.o)
 .text.libgcc.fmul
                0x0000000000002616        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_epilogue.o)
 .text.libgcc.fixed
                0x0000000000002616        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_epilogue.o)
 .text.libgcc.mul
                0x0000000000002616        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000002616       0x28 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_udivmodhi4.o)
                0x0000000000002616                __udivmodhi4
 .text.libgcc   0x000000000000263e        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x000000000000263e        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x000000000000263e        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x000000000000263e        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x000000000000263e        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.avr-libc
                0x000000000000263e      0x250 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(malloc.o)
                0x000000000000263e                malloc
                0x000000000000276a                free
 .text.avr-libc
                0x000000000000288e       0x1a /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(memcmp.o)
                0x000000000000288e                memcmp
 .text.avr-libc
                0x00000000000028a8       0x12 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(memcpy.o)
                0x00000000000028a8                memcpy
 .text.avr-libc
                0x00000000000028ba        0xe /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(memset.o)
                0x00000000000028ba                memset
 .text.avr-libc
                0x00000000000028c8       0x24 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(printf.o)
                0x00000000000028c8                printf
 .text.avr-libc
                0x00000000000028ec      0x3f8 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(vfprintf_std.o)
                0x00000000000028ec                vfprintf
 .text.avr-libc
                0x0000000000002ce4       0x16 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(strnlen_P.o)
                0x0000000000002ce4                strnlen_P
 .text.avr-libc
                0x0000000000002cfa       0x16 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(strnlen.o)
                0x0000000000002cfa                strnlen
 .text.avr-libc
                0x0000000000002d10       0x60 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(fputc.o)
                0x0000000000002d10                fputc
 .text.avr-libc
                0x0000000000002d70       0xbc /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(ultoa_invert.o)
                0x0000000000002d70                __ultoa_invert
 .text.libgcc.mul
                0x0000000000002e2c        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000002e2c        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000002e2c        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000002e2c        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000002e2c        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000002e2c        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000002e2c        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_clear_bss.o)
                0x0000000000002e2c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000002e2c        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_exit.o)
                0x0000000000002e2c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000002e2c        0x4 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x0000000000002e30                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x0000000000002e30                _etext = .

.data           0x0000000000800100      0x942 load address 0x0000000000002e30
                0x0000000000800100                PROVIDE (__data_start = .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/crtatmega128.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(exit.o)
 .data          0x0000000000800100        0x0 aes.o
 .data          0x0000000000800100        0x0 main.o
 .data          0x0000000000800100        0x0 print.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_copy_data.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_prologue.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_epilogue.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800100        0x6 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(malloc.o)
                0x0000000000800100                __malloc_heap_end
                0x0000000000800102                __malloc_heap_start
                0x0000000000800104                __malloc_margin
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(memcmp.o)
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(memcpy.o)
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(memset.o)
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(printf.o)
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(vfprintf_std.o)
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(strnlen_P.o)
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(strnlen.o)
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(fputc.o)
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(iob.o)
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(ultoa_invert.o)
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 .rodata        0x0000000000800106      0x800 aes.o
 .rodata        0x0000000000800906       0x70 main.o
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800976       0x17 aes.o
                                         0x19 (size before relaxing)
 .rodata.str1.1
                0x000000000080098d       0xaf main.o
 .rodata.str1.1
                0x0000000000800a3c        0x5 print.o
 *(.gnu.linkonce.r*)
                0x0000000000800a42                . = ALIGN (0x2)
 *fill*         0x0000000000800a41        0x1 
                0x0000000000800a42                _edata = .
                0x0000000000800a42                PROVIDE (__data_end = .)

.bss            0x0000000000800a42        0xa
                0x0000000000800a42                PROVIDE (__bss_start = .)
 *(.bss)
 .bss           0x0000000000800a42        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/crtatmega128.o
 .bss           0x0000000000800a42        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(exit.o)
 .bss           0x0000000000800a42        0x0 aes.o
 .bss           0x0000000000800a42        0x0 main.o
 .bss           0x0000000000800a42        0x0 print.o
 .bss           0x0000000000800a42        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_divmodhi4.o)
 .bss           0x0000000000800a42        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_exit.o)
 .bss           0x0000000000800a42        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_copy_data.o)
 .bss           0x0000000000800a42        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_prologue.o)
 .bss           0x0000000000800a42        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_epilogue.o)
 .bss           0x0000000000800a42        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000800a42        0x4 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(malloc.o)
                0x0000000000800a42                __flp
                0x0000000000800a44                __brkval
 .bss           0x0000000000800a46        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(memcmp.o)
 .bss           0x0000000000800a46        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(memcpy.o)
 .bss           0x0000000000800a46        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(memset.o)
 .bss           0x0000000000800a46        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(printf.o)
 .bss           0x0000000000800a46        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(vfprintf_std.o)
 .bss           0x0000000000800a46        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(strnlen_P.o)
 .bss           0x0000000000800a46        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(strnlen.o)
 .bss           0x0000000000800a46        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(fputc.o)
 .bss           0x0000000000800a46        0x6 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(iob.o)
                0x0000000000800a46                __iob
 .bss           0x0000000000800a4c        0x0 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(ultoa_invert.o)
 .bss           0x0000000000800a4c        0x0 /usr/lib/gcc/avr/12.2.0/avr51/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800a4c                PROVIDE (__bss_end = .)
                0x0000000000002e30                __data_load_start = LOADADDR (.data)
                0x0000000000003772                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800a4c        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit .noinit.* .gnu.linkonce.n.*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x0000000000800a4c                _end = .
                0x0000000000800a4c                PROVIDE (__heap_start = .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x24
 *(.comment)
 .comment       0x0000000000000000       0x12 aes.o
                                         0x13 (size before relaxing)
 .comment       0x0000000000000012       0x13 main.o
 .comment       0x0000000000000012       0x13 print.o
 .comment       0x0000000000000012       0x12 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(malloc.o)
                                         0x13 (size before relaxing)
 .comment       0x0000000000000024       0x13 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(printf.o)
 .comment       0x0000000000000024       0x13 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(vfprintf_std.o)
 .comment       0x0000000000000024       0x13 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(fputc.o)
 .comment       0x0000000000000024       0x13 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/libc.a(iob.o)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/crtatmega128.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x68
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 aes.o
 .debug_aranges
                0x0000000000000020       0x28 main.o
 .debug_aranges
                0x0000000000000048       0x20 print.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000     0x3b74
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x780 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/crtatmega128.o
 .debug_info    0x0000000000000780     0x2c72 aes.o
 .debug_info    0x00000000000033f2      0x632 main.o
 .debug_info    0x0000000000003a24      0x150 print.o

.debug_abbrev   0x0000000000000000      0xd1f
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x718 /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/crtatmega128.o
 .debug_abbrev  0x0000000000000718      0x3ca aes.o
 .debug_abbrev  0x0000000000000ae2      0x154 main.o
 .debug_abbrev  0x0000000000000c36       0xe9 print.o

.debug_line     0x0000000000000000     0x4293
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/crtatmega128.o
 .debug_line    0x000000000000001d     0x3e8d aes.o
 .debug_line    0x0000000000003eaa      0x206 main.o
 .debug_line    0x00000000000040b0      0x1e3 print.o

.debug_frame    0x0000000000000000      0x474
 *(.debug_frame)
 .debug_frame   0x0000000000000000      0x3b4 aes.o
 .debug_frame   0x00000000000003b4       0x4c main.o
 .debug_frame   0x0000000000000400       0x74 print.o

.debug_str      0x0000000000000000      0x6c0
 *(.debug_str)
 .debug_str     0x0000000000000000      0x27d /usr/lib/gcc/avr/12.2.0/../../../../avr/lib/avr51/crtatmega128.o
 .debug_str     0x000000000000027d      0x3f4 aes.o
                                        0x466 (size before relaxing)
 .debug_str     0x0000000000000671       0x48 main.o
                                        0x19c (size before relaxing)
 .debug_str     0x00000000000006b9        0x7 print.o
                                         0xd3 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_addr
 *(.debug_addr)

.debug_line_str
                0x0000000000000000       0x9b
 *(.debug_line_str)
 .debug_line_str
                0x0000000000000000       0x8c aes.o
                                         0xb9 (size before relaxing)
 .debug_line_str
                0x000000000000008c        0x7 main.o
                                         0xb3 (size before relaxing)
 .debug_line_str
                0x0000000000000093        0x8 print.o
                                         0x6b (size before relaxing)

.debug_loclists
                0x0000000000000000     0x227a
 *(.debug_loclists)
 .debug_loclists
                0x0000000000000000     0x20f5 aes.o
 .debug_loclists
                0x00000000000020f5       0x9b main.o
 .debug_loclists
                0x0000000000002190       0xea print.o

.debug_macro
 *(.debug_macro)

.debug_names
 *(.debug_names)

.debug_rnglists
                0x0000000000000000       0x3c
 *(.debug_rnglists)
 .debug_rnglists
                0x0000000000000000       0x22 aes.o
 .debug_rnglists
                0x0000000000000022       0x1a main.o

.debug_str_offsets
 *(.debug_str_offsets)

.debug_sup
 *(.debug_sup)
OUTPUT(aes elf32-avr)
LOAD linker stubs
